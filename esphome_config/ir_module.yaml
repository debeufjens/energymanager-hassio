esphome:
    name: energymanager-ir-module

esp8266:
    board: esp01_1m

# Enable logging

# Enable Home Assistant API
api:
    encryption:
        key: '6jKQBjoy8oOdlfxmnXHPHt25c4KNtMd97Dp0Y7JK0HI='

ota:
    password: 'fec2c1b07a7c703df61f694a28db6688'

wifi:
    ssid: !secret wifi_ssid
    password: !secret wifi_password

    # Enable fallback hotspot (captive portal) in case wifi connection fails
    ap:
        ssid: 'Energymanager-Ir-Module'
        password: 'gMQaoOs08gA6'

captive_portal:

remote_receiver:
    - id: rc_receiver
      pin:
          number: GPIO14
          inverted: True
      dump: rc5
      tolerance: 60%
      filter: 4us
      idle: 4ms

binary_sensor:
    - platform: remote_receiver
      name: 'Motion Detector'
      rc5:
          address: 0x09
          command: 0x4E
      filters:
          - delayed_off: 15s

logger:

remote_transmitter:
    pin: GPIO15
    carrier_duty_percent: 50%

# Individual switches
switch:
    - platform: template
      name: 'hvac on'
      turn_on_action:
          - number.set:
                id: tempSlider
                value: 17
      turn_off_action:
          - remote_transmitter.transmit_raw:
                carrier_frequency: 38kHz
                code: [6538, -7454, 714, -1270, 624, -3386, 714, -1268, 644, -1358, 714, -1292, 714, -1270, 700, -3316, 714, -3278, 716, -3276, 648, -1354, 714, -3278, 670, -3338, 712, -3272, 686, -3304, 700, -1302, 682, -1324, 712, -1270, 648, -1356, 712, -3278, 648, -1358, 712, -1292, 712, -1270, 698, -3312, 712, -1268, 648, -3360, 712, -3270, 714, -1292, 710, -3274, 714, -3276, 698, -3314, 712, -1268, 728, -3280, 714, -1270, 622, -3388, 712, -1268, 646, -1356, 710, -1292, 712, -1272, 698, -1306, 682, -3306, 676, -3338, 710, -1272, 646, -3366, 714, -3278, 710, -3280, 698, -3316, 712, -3278, 682, -1324, 710, -3300, 660, -1316, 712, -3272, 688, -1318, 710, -1270, 696, -1308, 682, -1324, 710, -3274, 710, -1294, 686, -3300, 686, -1318, 686, -3298, 688, -3298, 674, -3336, 712, -3278, 680, -1326, 672, -7476, 712]
      optimistic: True

number:
    - platform: template
      name: 'temperature_slider'
      id: tempSlider
      optimistic: True
      step: 1
      min_value: 16
      max_value: 31
      mode: slider
      set_action:
          - if: #16
                condition:
                    lambda: 'return x == 16;'
                then:
                    if:
                        condition:
                            lambda: return id(ACmode).state == "Heating";
                        then:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6496, -7444, 672, -3332, 696, -3290, 718, -1286, 716, -1266, 704, -1296, 674, -1328, 694, -3290, 676, -3314, 674, -1328, 692, -1310, 718, -3264, 658, -3336, 706, -3300, 720, -3272, 676, -1332, 720, -1264, 672, -1328, 718, -1288, 716, -1270, 698, -1302, 656, -1350, 718, -1268, 742, -3268, 718, -1268, 672, -3340, 720, -3270, 712, -3280, 702, -3308, 718, -3270, 652, -3342, 738, -1260, 676, -3318, 670, -1330, 718, -3274, 696, -3306, 718, -3266, 654, -1350, 716, -1266, 738, -3270, 716, -1268, 670, -3338, 716, -1266, 694, -1304, 680, -1322, 716, -3270, 652, -3342, 736, -1264, 650, -3346, 668, -1360, 686, -1294, 710, -1276, 698, -3310, 710, -1276, 728, -1272, 650, -3342, 730, -1270, 710, -3284, 668, -3342, 708, -3280, 678, -1328, 706, -3280, 648, -3344, 726, -1274, 648, -3346, 644, -7518, 706]
                        else:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6482, -7482, 680, -3334, 686, -3298, 688, -1298, 708, -1288, 680, -1326, 692, -1316, 688, -3296, 680, -3302, 680, -1326, 692, -1314, 690, -3298, 690, -3296, 678, -3334, 690, -3290, 690, -1316, 690, -1288, 704, -1300, 690, -1312, 692, -1284, 678, -3332, 692, -1288, 676, -1324, 720, -1310, 694, -3290, 718, -3276, 672, -3340, 692, -3296, 682, -1326, 694, -3294, 680, -3312, 740, -3268, 694, -1290, 672, -1328, 656, -3332, 702, -3302, 722, -3264, 678, -1326, 718, -1266, 740, -3264, 720, -1268, 692, -3312, 718, -1264, 698, -1300, 678, -1326, 720, -3266, 676, -3320, 742, -1256, 676, -3320, 670, -1330, 720, -1284, 722, -1262, 734, -3274, 724, -1262, 742, -1258, 674, -3318, 742, -1258, 722, -3272, 700, -3310, 722, -3264, 658, -1348, 720, -3264, 652, -3342, 738, -1260, 672, -3322, 644, -7518, 716]
          - if: #17
                condition:
                    lambda: 'return x == 17;'
                then:
                    if:
                        condition:
                            lambda: return id(ACmode).state == "Heating";
                        then:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6526, -7460, 702, -3288, 672, -3322, 720, -1296, 652, -1352, 680, -1306, 698, -1300, 706, -3268, 694, -3326, 686, -1306, 698, -1298, 650, -3324, 718, -3306, 684, -3286, 698, -3314, 700, -1300, 704, -1300, 678, -1308, 698, -1298, 652, -1354, 678, -3290, 696, -1328, 706, -1322, 680, -3302, 652, -1352, 678, -3282, 702, -3308, 686, -3300, 702, -1300, 706, -3284, 706, -3286, 650, -1378, 684, -3282, 704, -1322, 684, -3302, 662, -1344, 688, -1296, 706, -1296, 656, -1350, 690, -3296, 654, -1352, 686, -3296, 686, -1318, 688, -3300, 658, -3316, 726, -3282, 704, -3300, 654, -1352, 682, -3298, 686, -3282, 694, -1324, 658, -3312, 698, -1322, 658, -1346, 686, -1296, 708, -3298, 686, -1298, 674, -1326, 688, -3282, 696, -1322, 660, -3310, 702, -3326, 686, -3300, 658, -1348, 686, -3302, 688, -7458, 674]
                        else:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6516, -7472, 692, -3296, 654, -3340, 704, -1292, 652, -1352, 690, -1300, 734, -1260, 676, -3322, 734, -3272, 690, -1300, 696, -1300, 652, -3344, 710, -3294, 688, -3302, 672, -3324, 706, -1290, 676, -1332, 690, -1298, 696, -1302, 652, -1352, 688, -3302, 650, -1356, 708, -1324, 686, -1298, 708, -3304, 686, -3306, 686, -3312, 670, -3344, 686, -1298, 696, -3314, 684, -3302, 650, -3340, 734, -1266, 706, -1300, 680, -3308, 682, -3308, 668, -3340, 682, -1300, 696, -3312, 706, -1278, 730, -3282, 680, -3306, 678, -1328, 706, -1278, 670, -1334, 676, -3314, 700, -1304, 670, -3320, 700, -1300, 676, -1330, 702, -1278, 668, -1332, 676, -3316, 696, -1306, 672, -3320, 698, -1306, 648, -3342, 668, -3342, 702, -3280, 676, -3316, 692, -1308, 672, -3316, 694, -1306, 670, -3322, 698, -1306, 674, -7490, 670]
          - if: #18
                condition:
                    lambda: 'return x == 18;'
                then:
                    if:
                        condition:
                            lambda: return id(ACmode).state == "Heating";
                        then:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6510, -7460, 672, -3336, 692, -3294, 692, -1318, 718, -1268, 704, -1296, 682, -1328, 718, -3270, 678, -3316, 674, -1330, 694, -1312, 722, -3272, 682, -3314, 734, -3284, 720, -3270, 682, -1330, 720, -1268, 672, -1330, 720, -1290, 720, -3274, 680, -1326, 722, -1266, 734, -1266, 750, -3296, 720, -1260, 678, -3340, 720, -3268, 720, -1286, 720, -3270, 720, -3270, 700, -3314, 722, -1260, 720, -3296, 716, -1266, 676, -3342, 722, -3270, 722, -3270, 674, -1332, 720, -1286, 720, -3270, 682, -1324, 718, -3268, 720, -1286, 718, -1262, 672, -1334, 718, -3272, 696, -3316, 716, -1264, 728, -3286, 712, -1268, 652, -1354, 716, -1290, 712, -3274, 712, -1292, 712, -1268, 698, -3308, 710, -1270, 652, -3356, 710, -3276, 710, -3280, 646, -1358, 708, -3284, 696, -3320, 706, -1274, 698, -3318, 672, -7474, 704]
                        else:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6490, -7476, 680, -3312, 706, -3292, 688, -1318, 688, -1290, 674, -1324, 690, -1312, 688, -3292, 684, -3302, 680, -1326, 688, -1298, 708, -3296, 690, -3298, 676, -3336, 686, -3296, 690, -1314, 690, -1292, 678, -1324, 688, -1314, 690, -3290, 692, -1314, 690, -1288, 678, -1326, 718, -1314, 690, -3296, 718, -3276, 674, -3336, 692, -1292, 702, -3304, 694, -3296, 680, -3318, 738, -3268, 694, -1292, 670, -1328, 678, -3318, 698, -3306, 720, -3268, 680, -1326, 714, -1274, 738, -3270, 718, -1266, 672, -3336, 720, -1266, 700, -1302, 680, -1326, 720, -3270, 676, -3318, 740, -1262, 674, -3318, 670, -1328, 722, -1284, 722, -1266, 734, -3272, 722, -1262, 742, -1256, 676, -3316, 742, -1258, 720, -3268, 698, -3308, 722, -3266, 656, -1350, 720, -3268, 674, -3320, 742, -1258, 674, -3320, 666, -7496, 718]
          - if: #19
                condition:
                    lambda: 'return x == 19;'
                then:
                    if:
                        condition:
                            lambda: return id(ACmode).state == "Heating";
                        then:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6506, -7472, 688, -3294, 706, -3286, 668, -1326, 708, -1298, 690, -1296, 710, -1288, 680, -3312, 710, -3294, 692, -1294, 668, -1292, 720, -3304, 700, -3306, 690, -3296, 678, -3310, 714, -1286, 680, -1326, 690, -1292, 668, -1326, 684, -3306, 702, -3306, 692, -1292, 714, -1286, 678, -3316, 712, -1288, 694, -3304, 672, -3338, 694, -1292, 702, -1300, 678, -3314, 738, -3266, 718, -1268, 738, -3264, 694, -1292, 670, -3332, 696, -3294, 678, -3314, 708, -1292, 678, -1326, 720, -1264, 740, -3266, 694, -3294, 722, -1284, 720, -1266, 708, -1294, 678, -3322, 742, -3268, 722, -3290, 648, -1328, 722, -1260, 698, -1300, 682, -1324, 722, -3266, 678, -1328, 720, -1266, 742, -1258, 674, -3318, 694, -3312, 720, -3268, 658, -3336, 728, -1272, 662, -3332, 742, -3268, 720, -3270, 674, -1334, 718, -7428, 676]
                        else:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6520, -7480, 692, -3302, 684, -3314, 678, -1326, 702, -1304, 694, -1294, 712, -1290, 678, -3320, 712, -3294, 694, -1294, 672, -1328, 680, -3316, 710, -3300, 696, -3294, 678, -3314, 716, -1286, 678, -1330, 694, -1292, 696, -1304, 680, -3314, 738, -3272, 720, -1266, 698, -1332, 706, -1296, 678, -3314, 672, -3336, 720, -3268, 720, -1284, 720, -1264, 700, -3310, 722, -3268, 678, -3312, 738, -1264, 720, -1284, 722, -3264, 722, -3266, 700, -3314, 722, -1260, 702, -1300, 678, -1326, 722, -3264, 720, -3266, 670, -1330, 722, -1282, 722, -1262, 698, -3310, 720, -3266, 658, -3358, 714, -1262, 718, -1286, 718, -1264, 670, -1332, 718, -3272, 698, -1306, 712, -1294, 716, -1268, 736, -3276, 714, -3278, 712, -3282, 670, -3344, 714, -1272, 696, -3316, 710, -3280, 656, -3336, 728, -1274, 706, -7454, 646]
          - if: #20
                condition:
                    lambda: 'return x == 20;'
                then:
                    if:
                        condition:
                            lambda: return id(ACmode).state == "Heating";
                        then:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6516, -7472, 690, -3296, 680, -3320, 704, -1296, 650, -1356, 692, -1296, 708, -1290, 676, -3322, 710, -3296, 718, -1270, 700, -1298, 652, -3344, 712, -3294, 714, -3274, 676, -3320, 732, -1264, 678, -1328, 714, -1272, 700, -3306, 716, -1272, 708, -1288, 718, -1314, 656, -1350, 714, -3270, 650, -1354, 712, -3276, 716, -1292, 690, -3298, 712, -3282, 700, -3310, 714, -3274, 654, -1352, 716, -3272, 714, -1292, 714, -3274, 712, -3276, 696, -3312, 712, -1268, 726, -1278, 652, -1354, 712, -3274, 710, -3280, 670, -1330, 710, -1294, 710, -1272, 696, -3312, 712, -3284, 640, -3340, 730, -1270, 708, -1296, 708, -1276, 668, -1332, 678, -3306, 694, -1306, 674, -1330, 706, -1278, 726, -3280, 704, -3282, 704, -3288, 668, -3340, 704, -1278, 696, -3316, 702, -3288, 674, -3318, 724, -1276, 704, -7462, 672]
                        else:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6506, -7482, 690, -3300, 676, -3334, 692, -1292, 674, -1330, 664, -1344, 690, -1294, 684, -3330, 692, -3300, 692, -1318, 694, -1294, 672, -3342, 692, -3300, 680, -3318, 680, -3340, 694, -1292, 708, -1298, 694, -1314, 692, -3300, 694, -1314, 716, -1268, 716, -1314, 678, -1328, 694, -1292, 714, -3294, 694, -3290, 682, -1322, 698, -3292, 680, -3322, 740, -3270, 722, -3268, 678, -3318, 738, -1260, 682, -1328, 720, -3272, 680, -3318, 740, -3268, 724, -1268, 740, -1262, 676, -1332, 722, -3268, 680, -3320, 726, -1272, 678, -1328, 722, -1266, 738, -3264, 724, -3298, 650, -3324, 740, -1260, 680, -1328, 722, -1266, 736, -1262, 674, -3324, 738, -1262, 676, -1334, 720, -1268, 740, -3270, 718, -3272, 656, -3340, 734, -3272, 716, -1274, 734, -3272, 716, -3274, 672, -3322, 732, -1266, 714, -7448, 710]
          - if: #21
                condition:
                    lambda: 'return x == 21;'
                then:
                    if:
                        condition:
                            lambda: return id(ACmode).state == "Heating";
                        then:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6514, -7476, 686, -3300, 690, -3298, 680, -1326, 690, -1300, 710, -1286, 678, -1328, 682, -3312, 678, -3318, 676, -1320, 678, -1326, 690, -3298, 678, -3338, 692, -3298, 692, -3300, 678, -1330, 682, -1326, 686, -1294, 680, -3338, 690, -1290, 678, -3338, 692, -1288, 720, -1312, 680, -3314, 714, -1286, 694, -3304, 672, -1328, 682, -3314, 704, -1296, 678, -3314, 740, -3266, 720, -1264, 740, -3266, 722, -1266, 672, -3336, 720, -3268, 678, -3312, 734, -1266, 678, -1328, 722, -1266, 742, -3266, 722, -3270, 690, -1318, 722, -1264, 728, -1268, 678, -3312, 742, -3264, 720, -3296, 652, -1332, 720, -1266, 698, -1302, 680, -1326, 722, -3266, 676, -1328, 720, -1266, 742, -1260, 674, -3322, 694, -3314, 720, -3266, 680, -3310, 728, -1272, 654, -3338, 738, -3268, 716, -3268, 672, -1334, 714, -7432, 680]
                        else:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6488, -7498, 676, -3336, 690, -3296, 692, -1316, 690, -1294, 674, -1330, 684, -1324, 694, -3292, 682, -3310, 678, -1328, 692, -1314, 694, -3292, 696, -3300, 674, -3338, 720, -3270, 682, -1326, 694, -1290, 674, -1326, 720, -3274, 674, -1326, 720, -3270, 674, -1330, 748, -1286, 720, -1286, 720, -3268, 718, -3270, 680, -1324, 722, -3270, 676, -1328, 720, -3268, 678, -3322, 738, -3268, 718, -1266, 698, -1300, 678, -3316, 734, -3268, 722, -3264, 676, -1328, 720, -1264, 740, -1258, 702, -3292, 724, -3284, 720, -1266, 732, -1264, 676, -1328, 720, -3268, 674, -3326, 738, -3278, 712, -1286, 678, -1302, 658, -1352, 720, -1268, 736, -3274, 720, -1268, 736, -1264, 674, -1334, 718, -3272, 684, -3312, 726, -3286, 714, -3274, 652, -1354, 712, -3278, 672, -3328, 728, -3278, 710, -1294, 644, -7492, 710]
          - if: #22
                condition:
                    lambda: 'return x == 22;'
                then:
                    if:
                        condition:
                            lambda: return id(ACmode).state == "Heating";
                        then:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6512, -7476, 690, -3300, 704, -3290, 680, -1318, 682, -1328, 688, -1298, 710, -1290, 678, -3322, 708, -3300, 692, -1296, 676, -1326, 682, -3320, 712, -3298, 690, -3298, 682, -3318, 712, -1286, 680, -1328, 692, -1294, 700, -3310, 694, -3298, 680, -1326, 722, -1312, 692, -1292, 714, -3302, 716, -1264, 676, -3338, 694, -1290, 676, -1330, 680, -3316, 702, -3308, 720, -3266, 680, -1328, 716, -3270, 720, -1288, 692, -3296, 716, -3274, 676, -3334, 718, -1262, 708, -1294, 678, -1328, 720, -3264, 722, -3270, 672, -1330, 722, -1282, 722, -1262, 704, -3306, 722, -3266, 678, -3312, 744, -1258, 720, -1286, 720, -1262, 696, -1304, 680, -3310, 702, -1298, 658, -1350, 720, -1262, 768, -3244, 720, -3272, 746, -3250, 696, -3316, 720, -1266, 728, -3284, 718, -3272, 654, -3342, 740, -1266, 716, -7456, 672]
                        else:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6510, -7482, 692, -3298, 686, -3312, 674, -1324, 682, -1322, 690, -1298, 710, -1290, 680, -3316, 712, -3296, 690, -1294, 674, -1326, 684, -3312, 708, -3300, 692, -3300, 680, -3316, 712, -1288, 680, -1328, 690, -1296, 676, -3334, 692, -3300, 682, -1326, 680, -1352, 690, -1290, 706, -1298, 680, -3310, 674, -3340, 694, -1288, 674, -1328, 692, -3294, 674, -3338, 694, -3292, 682, -3312, 710, -1292, 696, -1310, 700, -3288, 720, -3272, 676, -3338, 720, -1264, 676, -1326, 678, -1328, 720, -3268, 722, -3274, 676, -1330, 720, -1284, 720, -1262, 700, -3312, 722, -3270, 680, -3316, 738, -1262, 722, -1284, 722, -1260, 672, -1332, 722, -3266, 698, -1304, 682, -1324, 722, -1262, 740, -3270, 722, -3264, 720, -3272, 694, -3320, 746, -1238, 702, -3308, 720, -3268, 656, -3334, 736, -1266, 718, -7448, 648]
          - if: #23
                condition:
                    lambda: 'return x == 23;'
                then:
                    if:
                        condition:
                            lambda: return id(ACmode).state == "Heating";
                        then:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6516, -7478, 692, -3298, 692, -3302, 674, -1332, 684, -1320, 696, -1290, 700, -1304, 680, -3314, 714, -3296, 692, -1290, 674, -1326, 690, -3302, 672, -3338, 692, -3300, 706, -3286, 706, -1298, 680, -1326, 692, -1292, 674, -3336, 694, -3294, 680, -3316, 704, -1328, 678, -1328, 694, -3296, 676, -1330, 692, -3296, 680, -1326, 694, -1312, 694, -1282, 678, -3320, 710, -3296, 696, -1294, 710, -3294, 694, -1294, 710, -3294, 694, -3294, 678, -3316, 738, -1258, 676, -1328, 718, -1288, 720, -3270, 718, -3268, 678, -1326, 720, -1266, 742, -1256, 676, -3336, 720, -3270, 720, -3298, 676, -1304, 722, -1268, 734, -1264, 678, -1330, 720, -3270, 676, -1330, 720, -1268, 738, -1258, 704, -3292, 732, -3276, 720, -3268, 674, -3322, 738, -1258, 674, -3318, 736, -3266, 718, -3268, 700, -1306, 716, -7448, 624]
                        else:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6516, -7480, 694, -3296, 692, -3306, 672, -1328, 684, -1322, 694, -1294, 704, -1294, 680, -3310, 712, -3294, 692, -1294, 672, -1328, 678, -3314, 674, -3332, 692, -3294, 680, -3310, 710, -1288, 682, -1324, 692, -1292, 672, -3332, 696, -3292, 684, -3306, 702, -1324, 676, -1328, 688, -1300, 710, -3292, 692, -3294, 678, -1324, 694, -1312, 692, -1288, 676, -3334, 692, -3290, 678, -3308, 678, -1326, 692, -1312, 700, -3286, 718, -3268, 678, -3336, 694, -1286, 676, -1326, 688, -1318, 716, -3270, 718, -3268, 678, -1328, 718, -1286, 720, -1260, 674, -3340, 720, -3268, 684, -3332, 680, -1298, 722, -1286, 720, -1260, 676, -1330, 720, -3270, 674, -1330, 720, -1286, 720, -1258, 710, -3304, 720, -3266, 720, -3268, 674, -3340, 720, -1258, 674, -3338, 722, -3268, 684, -3306, 704, -1300, 722, -7448, 646]
          - if: #24
                condition:
                    lambda: 'return x == 24;'
                then:
                    if:
                        condition:
                            lambda: return id(ACmode).state == "Heating";
                        then:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6494, -7498, 678, -3336, 690, -3300, 692, -1316, 692, -1292, 674, -1328, 684, -1322, 692, -3298, 682, -3310, 678, -1326, 692, -1314, 692, -3296, 690, -3300, 674, -3336, 718, -3270, 682, -1324, 692, -1290, 676, -3334, 692, -1288, 676, -1328, 718, -1290, 692, -1290, 718, -1308, 678, -3318, 736, -1260, 680, -1324, 718, -3268, 678, -3320, 712, -3294, 722, -3268, 678, -3320, 740, -1258, 678, -3318, 698, -1300, 680, -3322, 736, -3276, 722, -3270, 678, -1330, 722, -1268, 740, -1258, 702, -3296, 702, -3310, 720, -1268, 736, -1266, 676, -1332, 722, -3270, 678, -3324, 740, -3270, 722, -1266, 698, -1302, 676, -1330, 720, -1268, 740, -3264, 720, -1266, 738, -1258, 674, -1330, 718, -3264, 682, -3312, 728, -3284, 716, -3272, 654, -1354, 718, -3274, 672, -3326, 732, -3274, 714, -1274, 662, -7498, 712]
                        else:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6516, -7478, 690, -3298, 692, -3304, 676, -1330, 692, -1316, 690, -1294, 676, -1330, 682, -3312, 712, -3302, 692, -1294, 676, -1326, 696, -3300, 676, -3340, 692, -3302, 684, -3314, 706, -1298, 680, -1326, 718, -3270, 716, -1288, 694, -1290, 674, -1328, 690, -1318, 678, -1336, 714, -1286, 678, -3320, 696, -1302, 678, -3320, 730, -3278, 722, -3268, 678, -3318, 738, -3274, 720, -3272, 676, -1330, 720, -1266, 706, -3302, 720, -3266, 678, -3318, 740, -1258, 676, -1330, 722, -1268, 738, -3270, 722, -3268, 680, -1330, 720, -1268, 738, -1258, 676, -3322, 740, -3270, 722, -3270, 700, -1306, 722, -1266, 728, -1272, 654, -1350, 720, -3268, 674, -1332, 720, -1268, 736, -1262, 700, -3298, 698, -3308, 716, -3274, 654, -3342, 732, -1268, 626, -3372, 730, -3276, 712, -3278, 694, -1308, 712, -7436, 646]
          - if: #25
                condition:
                    lambda: 'return x == 25;'
                then:
                    if:
                        condition:
                            lambda: return id(ACmode).state == "Heating";
                        then:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6512, -7472, 692, -3296, 688, -3298, 676, -1324, 690, -1314, 690, -1290, 676, -1326, 680, -3306, 712, -3296, 692, -1292, 674, -1326, 690, -3298, 674, -3336, 690, -3294, 684, -3310, 702, -1298, 680, -1324, 692, -3294, 716, -1286, 716, -1264, 674, -3336, 694, -1288, 676, -1326, 680, -3312, 714, -1288, 718, -1288, 718, -3270, 718, -3276, 674, -1330, 678, -3314, 704, -3302, 696, -1284, 740, -3270, 720, -1262, 672, -3342, 720, -3268, 720, -3268, 676, -1326, 682, -1326, 722, -1262, 742, -3272, 722, -3268, 722, -1286, 720, -1262, 696, -1306, 682, -3312, 730, -3282, 720, -3294, 650, -1330, 720, -1260, 670, -1332, 720, -1284, 720, -3266, 720, -1286, 720, -1262, 732, -1270, 654, -3336, 670, -3340, 718, -3268, 716, -3270, 696, -1308, 680, -3306, 724, -3284, 714, -3272, 654, -1348, 704, -7432, 708]
                        else:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6516, -7468, 708, -3298, 692, -3300, 674, -1330, 690, -1318, 694, -1290, 674, -1328, 684, -3308, 712, -3284, 704, -1292, 676, -1324, 692, -3302, 674, -3338, 690, -3300, 680, -3312, 702, -1300, 680, -1326, 694, -3296, 694, -1316, 694, -1288, 676, -3342, 716, -1268, 706, -1324, 676, -1328, 694, -3298, 680, -1328, 718, -3274, 680, -3324, 736, -1262, 680, -3322, 738, -3272, 720, -3272, 678, -1330, 722, -1268, 706, -3304, 696, -3294, 678, -3322, 740, -1262, 678, -1332, 722, -1266, 740, -3272, 720, -3268, 680, -1328, 722, -1268, 738, -1260, 676, -3324, 740, -3270, 722, -3300, 652, -1332, 720, -1268, 728, -1272, 678, -1330, 720, -3270, 674, -1330, 720, -1268, 738, -1258, 702, -3298, 698, -3306, 720, -3268, 654, -3342, 736, -1262, 672, -3326, 736, -3270, 716, -3270, 696, -1308, 714, -7430, 646]
          - if: #26
                condition:
                    lambda: 'return x == 26;'
                then:
                    if:
                        condition:
                            lambda: return id(ACmode).state == "Heating";
                        then:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6520, -7458, 694, -3312, 692, -3300, 678, -1328, 692, -1296, 710, -1292, 676, -1332, 690, -3300, 702, -3298, 696, -1302, 682, -1328, 716, -3272, 648, -3346, 708, -3296, 690, -3296, 676, -1330, 688, -1300, 698, -3306, 690, -1292, 708, -3296, 690, -1294, 710, -1286, 718, -1316, 650, -3342, 720, -1282, 716, -1290, 692, -3300, 690, -1314, 692, -3298, 680, -3314, 706, -3304, 716, -1268, 740, -3270, 714, -1268, 672, -3340, 714, -3274, 712, -3280, 700, -1304, 654, -1350, 716, -1266, 736, -3272, 718, -3272, 716, -1292, 712, -1270, 690, -1310, 678, -3314, 702, -3306, 712, -3286, 640, -1356, 712, -1272, 668, -1336, 710, -1296, 710, -3276, 680, -1326, 710, -1274, 702, -1298, 652, -3344, 666, -3344, 708, -3280, 710, -3282, 694, -1310, 678, -3318, 698, -3312, 708, -3282, 650, -1356, 702, -7446, 702]
                        else:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6498, -7478, 690, -3304, 670, -3334, 690, -1296, 676, -1322, 680, -1322, 690, -1294, 710, -3292, 716, -3272, 692, -1312, 696, -1292, 672, -3332, 692, -3298, 680, -3312, 714, -3294, 696, -1290, 714, -1284, 718, -3274, 672, -1328, 680, -3314, 700, -1328, 678, -1328, 692, -1316, 694, -1288, 710, -3304, 694, -1286, 676, -3334, 696, -1286, 676, -3340, 720, -3270, 684, -3306, 706, -3310, 720, -1262, 676, -1328, 716, -3270, 672, -3334, 718, -3264, 720, -1284, 718, -1260, 702, -1300, 678, -3310, 674, -3336, 718, -1260, 674, -1328, 718, -1286, 720, -3268, 680, -3334, 704, -3282, 720, -1262, 674, -1330, 720, -1286, 718, -1260, 672, -3340, 716, -1264, 698, -1304, 682, -1324, 718, -3268, 718, -3274, 670, -3342, 716, -3278, 714, -1294, 714, -3276, 680, -3310, 702, -3308, 710, -1272, 674, -7484, 710]
          - if: #27
                condition:
                    lambda: 'return x == 27;'
                then:
                    if:
                        condition:
                            lambda: return id(ACmode).state == "Heating";
                        then:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6490, -7486, 682, -3312, 704, -3298, 694, -1294, 712, -1284, 678, -1330, 692, -1294, 710, -3292, 694, -3290, 684, -1320, 692, -1292, 708, -3292, 716, -3268, 674, -3316, 710, -3292, 690, -1296, 710, -1286, 656, -3334, 696, -1296, 676, -3316, 708, -3294, 692, -1292, 712, -1284, 676, -3318, 734, -1262, 684, -1318, 716, -3266, 652, -1350, 716, -1266, 736, -3266, 692, -3294, 676, -1328, 718, -3266, 708, -1296, 714, -3270, 652, -3344, 736, -3266, 718, -1268, 734, -1258, 676, -1330, 718, -3260, 680, -3308, 700, -1294, 652, -1350, 714, -1268, 736, -3262, 716, -3264, 698, -3294, 734, -1286, 654, -1324, 716, -1268, 730, -1266, 624, -3364, 734, -1260, 672, -1332, 714, -1268, 732, -3270, 712, -3268, 654, -3338, 728, -3270, 712, -1272, 728, -3270, 710, -3268, 694, -3296, 728, -1266, 710, -7448, 706]
                        else:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6522, -7480, 694, -3298, 680, -3318, 672, -1328, 706, -1302, 692, -1296, 710, -1288, 682, -3316, 714, -3296, 694, -1294, 672, -1328, 684, -3310, 704, -3308, 718, -3272, 680, -3312, 714, -1286, 678, -1324, 698, -3294, 692, -1314, 694, -3292, 682, -3312, 714, -1284, 680, -1326, 696, -1292, 716, -3294, 696, -1290, 672, -3338, 718, -1270, 700, -1298, 680, -3316, 740, -3274, 696, -3296, 680, -1332, 720, -1266, 674, -3338, 724, -3270, 680, -3316, 738, -1262, 680, -1328, 722, -1266, 744, -1258, 722, -3276, 696, -1306, 682, -1328, 722, -1266, 740, -3274, 724, -3272, 676, -3322, 742, -3274, 716, -1264, 694, -1304, 680, -1324, 722, -3268, 678, -1330, 748, -1240, 742, -1260, 676, -1332, 720, -3270, 682, -3314, 724, -3286, 718, -1268, 734, -3274, 718, -3268, 672, -3322, 736, -3274, 714, -7428, 678]
          - if: #28
                condition:
                    lambda: 'return x == 28;'
                then:
                    if:
                        condition:
                            lambda: return id(ACmode).state == "Heating";
                        then:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6516, -7470, 692, -3298, 692, -3302, 674, -1330, 682, -1324, 692, -1294, 708, -1294, 680, -3310, 712, -3294, 694, -1292, 674, -1328, 678, -3316, 674, -3334, 694, -3298, 682, -3314, 714, -1290, 678, -1326, 694, -3294, 692, -3302, 674, -1330, 682, -1322, 680, -1338, 712, -1288, 676, -3340, 718, -1264, 680, -1328, 694, -1314, 694, -3296, 694, -3298, 678, -3342, 694, -3292, 690, -1318, 694, -3296, 720, -1286, 720, -3268, 720, -3270, 678, -3338, 722, -1262, 676, -1330, 722, -1288, 720, -1260, 676, -3342, 720, -1262, 676, -1330, 722, -1286, 718, -3270, 724, -3270, 704, -3314, 722, -3270, 722, -1286, 720, -1260, 676, -1330, 720, -3268, 674, -1330, 718, -1286, 720, -1260, 730, -1276, 724, -3274, 674, -3344, 720, -3270, 720, -1286, 720, -3270, 720, -3272, 702, -3312, 718, -3270, 718, -7452, 642]
                        else:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6508, -7462, 690, -3294, 678, -3334, 688, -1290, 676, -1324, 692, -1314, 692, -1288, 674, -3314, 708, -3296, 690, -1314, 688, -1290, 680, -3312, 710, -3290, 692, -3296, 676, -3320, 710, -1288, 676, -1328, 692, -3296, 678, -3338, 692, -1288, 676, -1326, 720, -1314, 694, -1292, 714, -1286, 678, -3310, 672, -1328, 716, -1286, 718, -3268, 682, -3314, 738, -3268, 696, -3290, 678, -3312, 742, -1258, 722, -1284, 694, -3292, 680, -3316, 708, -3296, 720, -1262, 738, -1258, 678, -1328, 722, -1264, 694, -3314, 720, -1266, 702, -1298, 678, -1326, 722, -3262, 676, -3314, 740, -3268, 718, -3264, 722, -1284, 722, -1264, 700, -1298, 674, -3316, 738, -1264, 674, -1330, 718, -1264, 740, -1258, 720, -3276, 698, -3312, 720, -3270, 658, -1350, 718, -3274, 652, -3344, 738, -3270, 716, -3272, 716, -7446, 700]
          - if: #29
                condition:
                    lambda: 'return x == 29;'
                then:
                    if:
                        condition:
                            lambda: return id(ACmode).state == "Heating";
                        then:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6510, -7470, 690, -3298, 680, -3330, 692, -1286, 680, -1326, 690, -1316, 690, -1288, 676, -3332, 692, -3290, 692, -1312, 690, -1286, 678, -3328, 692, -3290, 692, -3296, 676, -3334, 690, -1284, 676, -1326, 690, -3288, 676, -3332, 716, -1258, 678, -3332, 676, -1330, 714, -1282, 678, -3310, 714, -1282, 720, -1284, 718, -1264, 700, -3308, 720, -1266, 738, -3268, 720, -3266, 676, -1328, 718, -3266, 720, -1282, 722, -3264, 678, -3312, 730, -3274, 720, -1264, 742, -1256, 674, -1328, 722, -1262, 696, -3310, 720, -1262, 700, -1298, 678, -1326, 722, -3268, 676, -3316, 740, -3266, 720, -3268, 720, -1286, 722, -1266, 700, -1300, 656, -3342, 734, -1264, 654, -1354, 718, -1266, 738, -1262, 742, -3248, 696, -3312, 716, -3272, 682, -1324, 714, -3276, 626, -3366, 734, -3274, 714, -3272, 712, -7450, 676]
                        else:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6514, -7450, 672, -3336, 692, -3294, 682, -1324, 692, -1294, 712, -1286, 680, -1326, 692, -3292, 676, -3312, 670, -1328, 682, -1324, 694, -3294, 680, -3314, 736, -3264, 720, -3262, 678, -1328, 720, -1262, 672, -3332, 718, -3264, 682, -1322, 718, -3264, 748, -1278, 680, -1324, 720, -1260, 740, -3266, 720, -1260, 672, -1328, 720, -3266, 674, -1328, 680, -3308, 706, -3302, 722, -3266, 678, -1328, 720, -1260, 672, -3334, 718, -3264, 722, -3266, 698, -1304, 678, -1324, 720, -1262, 738, -1264, 722, -3266, 670, -1330, 720, -1286, 720, -1264, 700, -3310, 718, -3266, 656, -3334, 738, -3274, 716, -1266, 668, -1332, 716, -1288, 714, -3270, 714, -1290, 714, -1266, 726, -1276, 654, -1348, 710, -3270, 710, -3276, 668, -3336, 712, -1270, 694, -3312, 708, -3278, 654, -3334, 728, -3278, 674, -7460, 702]
          - if: #30
                condition:
                    lambda: 'return x == 30;'
                then:
                    if:
                        condition:
                            lambda: return id(ACmode).state == "Heating";
                        then:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6512, -7488, 694, -3304, 676, -3342, 692, -1296, 674, -1330, 684, -1324, 692, -1292, 712, -3300, 692, -3298, 692, -1314, 694, -1290, 674, -3338, 718, -3272, 684, -3314, 710, -3304, 696, -1292, 714, -1286, 696, -3302, 674, -3340, 696, -3294, 696, -1312, 678, -1338, 738, -1260, 678, -3320, 736, -1262, 682, -1328, 722, -1268, 738, -1260, 678, -3340, 720, -3268, 722, -3268, 678, -1330, 682, -3312, 680, -1330, 722, -3272, 678, -3324, 740, -3268, 722, -1288, 720, -1260, 698, -1306, 722, -1268, 728, -3276, 724, -1266, 740, -1258, 676, -1330, 720, -3268, 676, -3324, 738, -3272, 686, -3308, 654, -1348, 718, -1288, 718, -1260, 674, -3346, 716, -1266, 674, -1334, 718, -1274, 734, -1266, 658, -3346, 732, -3278, 714, -3280, 626, -1382, 712, -3278, 672, -3328, 730, -3282, 678, -3314, 710, -7464, 710]
                        else:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6512, -7474, 690, -3298, 690, -3300, 674, -1330, 690, -1312, 692, -1294, 676, -1326, 704, -3288, 712, -3298, 694, -1292, 676, -1326, 692, -3300, 674, -3338, 692, -3298, 682, -3312, 708, -1292, 684, -1324, 692, -3296, 694, -3304, 674, -3338, 678, -1356, 692, -1286, 676, -1328, 694, -1294, 712, -3292, 694, -1296, 704, -1292, 680, -1326, 694, -3296, 676, -3324, 714, -3294, 718, -3272, 678, -1328, 720, -1268, 736, -3270, 720, -3268, 676, -3338, 720, -1254, 678, -1328, 724, -1266, 740, -1260, 678, -3324, 732, -1268, 678, -1332, 724, -1284, 722, -3274, 722, -3268, 704, -3314, 722, -3264, 722, -1286, 714, -1264, 674, -1330, 720, -3266, 672, -1330, 746, -1260, 720, -1258, 702, -1304, 720, -3266, 652, -3342, 734, -3270, 718, -1292, 718, -3274, 718, -3274, 698, -3302, 732, -3278, 716, -7456, 624]
          - if: #31
                condition:
                    lambda: 'return x == 31;'
                then:
                    if:
                        condition:
                            lambda: return id(ACmode).state == "Heating";
                        then:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6520, -7478, 690, -3300, 678, -3338, 692, -1290, 676, -1328, 692, -1314, 690, -1294, 678, -3336, 690, -3298, 694, -1314, 692, -1290, 676, -3336, 692, -3298, 692, -3298, 674, -3320, 708, -1290, 704, -1300, 692, -3298, 678, -3334, 692, -3294, 694, -3300, 678, -1326, 694, -1316, 690, -3294, 682, -1326, 694, -1288, 676, -1328, 720, -1288, 696, -1288, 676, -3336, 716, -3268, 680, -1322, 718, -3264, 720, -1286, 694, -3290, 696, -3298, 674, -3336, 718, -1264, 674, -1328, 680, -1326, 720, -1262, 676, -3336, 720, -1262, 674, -1330, 720, -1284, 722, -3266, 680, -3314, 706, -3310, 722, -3272, 724, -1286, 720, -1262, 674, -1332, 722, -3276, 700, -1306, 724, -1286, 720, -1260, 732, -1272, 720, -3272, 672, -3342, 722, -3270, 722, -1288, 720, -3272, 684, -3314, 728, -3290, 744, -3250, 718, -7452, 646]
                        else:
                            - remote_transmitter.transmit_raw:
                                  carrier_frequency: 38kHz
                                  code: [6508, -7490, 694, -3308, 672, -3342, 696, -1294, 678, -1324, 696, -1312, 692, -1294, 716, -3296, 692, -3294, 694, -1314, 694, -1296, 672, -3336, 696, -3298, 680, -3316, 712, -3298, 692, -1294, 714, -1286, 694, -3300, 672, -3338, 694, -3296, 718, -3322, 694, -1288, 676, -1328, 682, -1322, 692, -3294, 696, -1310, 694, -1286, 676, -1326, 718, -1286, 694, -3288, 668, -3324, 702, -3310, 696, -1286, 676, -1328, 720, -3274, 676, -3338, 718, -3274, 722, -1288, 722, -1262, 704, -1304, 680, -1328, 722, -3270, 722, -1286, 722, -1262, 674, -1330, 722, -3272, 700, -3314, 722, -3278, 670, -3318, 674, -1330, 722, -1286, 722, -1260, 674, -3340, 722, -1260, 702, -1306, 682, -1326, 722, -1262, 672, -3342, 718, -3266, 720, -3270, 672, -1332, 720, -3268, 698, -3312, 716, -3272, 658, -3334, 708, -7458, 716]

select:
    - platform: template
      name: AC_mode
      id: ACmode
      optimistic: True
      options:
          - 'Heating'
          - 'Cooling'
      initial_option: 'Heating'
      set_action:
          - delay: 1s
          - number.set:
                id: tempSlider
                value: !lambda return id(tempSlider).state;
